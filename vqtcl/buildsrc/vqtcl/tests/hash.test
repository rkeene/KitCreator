#!/usr/bin/env tclkit
# %renumber<^\s*test >%

source [file join [file dir [info script]] initests.tcl]

test 0 {} {
    package require vlerq
} $version

test 1 {} {
    vlerq hashcol I {}
} {}

test 2 {} {
    vlerq hashcol I {0 1 10 -0 -1 -10}
} {0 1 10 0 -1 -10}

test 3 {} {
    vlerq hashcol L {0 -0 123456789 12345678901 12345678902}
} {0 0 123456789 -539222985 -539222988}

test 4 {} tcl8.4 {
    vlerq hashcol D {0 -0 12345.6789 12345.678901 12345.678902}
} {0 -2147483648 -1493572489 -1494073142 -1500863666}

test 5 {} tcl8.4 {
    vlerq hashcol F {0 -0 12345.6789 12345.678901 12345.678902}
} {0 -2147483648 1178658487 1178658487 1178658487}

test 6 {} {
    vlerq hashcol S {"" a aa A 0 1 -0}
} {0 698601184 1080305280 -107479360 -938362831 1636964016 1298176885}

test 7 {} {
    vlerq hashcol B {"" a aa A 0 1 -0}
} {3166080 698601184 1080305280 -107479360 -938362831 1636964016 1298176885}

test 8 {} {
    vlerq hashview {}
} {}

test 9 {} {
    vlerq hashview [vlerq meta ""]
} {-236896329 -54087954 589683543}

test 10 {} {
    vlerq rowhash [vlerq meta ""] 1
} -54087954

test 11 {} {
    vlerq rowhash [vlerq def A:B abc] 0
} -307079773

test 12 {} {
    vlerq getinfo {} {} 0
} {{} {0 0 0 0} {}}

test 13 {} {
    set v [vlerq def A:I {1 2 1 2 1 3}]
    vlerq getinfo $v $v 0
} {{0 1 5} {0 0 0 2 0 3 0 1} {1 2 1 2 1 3}}

test 14 {} {
    set v [vlerq def A {a b a b a c}]
    set h [vlerq getinfo $v $v 0]
} {{0 1 5} {2 0 3 1 0 0 0 0}\
     {698601184 -1021039261 698601184 -1021039261 698601184 1554287586}}

test 15 {} {
    eval [linsert $h 0 vlerq hashfind $v 1 $v]
} 1

test 16 {} {
    eval [linsert $h 0 vlerq hashfind [vlerq def A x] 0 $v]
} -1

test 17 {} {
    vlerq getinfo {} {} 1
} {{} {} {}}

test 18 {} {
    set v [vlerq def A:I {1 2 1 2 1 3}]
    vlerq getinfo $v $v 1
} {{0 1 5} {3 5 6} {0 2 4 1 3 5}}

test 19 {} {
    set v [vlerq def A {a b a b a c}]
    vlerq getinfo $v $v 1
} {{0 1 5} {3 5 6} {0 2 4 1 3 5}}

test 20 {} {
    vlerq uniquemap {}
} {}

test 21 {} {
    vlerq uniquemap [vlerq def A:I {1 2 1 2 1 3}]
} {0 1 5}

test 22 {} {
    vlerq uniquemap [vlerq def A:I {1 2 3 4 5 6}]
} {0 1 2 3 4 5}

test 23 {} {
    vlerq uniquemap [vlerq def A {a b a b a c}]
} {0 1 5}

test 24 {} {
    vlerq uniquemap [vlerq def A {a a a a a a}]
} {0}

test 25 {} {
    vlerq uniquemap [vlerq data [vlerq mdef {A B:I}] {a 0 a 0 a -0} \
                                                     {1 0 0 0 -0 0}]
} {0 1 2 5}

test 26 {} {
    vlerq unique [vlerq def A {a b a b a c}]
} {data {mdef A} {a b c}}

test 27 {} {
    vlerq isectmap [vlerq def A {d b a}] [vlerq def A {a b c}]
} {1 2}
    
test 28 {} {
    vlerq intersect [vlerq def A {a b c}] [vlerq def A {d b a}]
} {data {mdef A} {a b}}
    
test 29 {} {
    vlerq except [vlerq def A {a b c d e}] [vlerq def A {d b a}]
} {data {mdef A} {c e}}
    
test 30 {} {
    vlerq union [vlerq def A {a b c}] [vlerq def A {e b a d}]
} {data {mdef A} {a b c e d}}
    
test 31 {} {
    set v [vlerq def A {a b c d e}]
    vlerq getinfo $v $v 1
} {{0 1 2 3 4} {1 2 3 4 5} {0 1 2 3 4}}

test 32 {} {
    set v [vlerq def A {a b b c c c}]
    vlerq getinfo $v $v 1
} {{0 1 3} {1 3 6} {0 1 2 3 4 5}}

test 33 {} {
    set v [vlerq def A {a b a b a c}]
    vlerq getinfo $v $v 1
} {{0 1 5} {3 5 6} {0 2 4 1 3 5}}

test 34 {} {
    set v [vlerq def A {a b c d d}]
    vlerq getinfo $v $v 1
} {{0 1 2 3} {1 2 3 5} {0 1 2 3 4}}

test 35 {} {
    vlerq group [vlerq def A {a b c d e}] 0 G
} {data {mdef {A {G {}}}} {a b c d e} {1 1 1 1 1}}

test 36 {} {
    vlerq group [vlerq def A {a b b c c c}] 0 G
} {data {mdef {A {G {}}}} {a b c} {1 2 3}}

test 37 {} {
    vlerq group [vlerq def A {a b b c c c}] {} G
} {data {mdef {{G A}}} {{data {mdef A} {a b b c c c}}}}
    
test 38 {} {
    vlerq group [vlerq def A {a b a b a c}] 0 G
} {data {mdef {A {G {}}}} {a b c} {3 2 1}}

test 39 {} {
    vlerq group [vlerq def A {a b a b a c}] A G
} {data {mdef {A {G {}}}} {a b c} {3 2 1}}

test 40 {} {
    set v [vlerq group [vlerq def {A B:I} {a 0 b 1 c 1 d 1 d 0}] 0 G]
} {data {mdef {A {G B:I}}} {a b c d} {{data {mdef B:I} 0}\
                                        {data {mdef B:I} 1}\
                                        {data {mdef B:I} 1}\
                                        {data {mdef B:I} {1 0}}}}
test 41 {} {
    vlerq hashcol V [vlerq getcol $v 1]
} {1 0 0 3}
    
test 42 {} {
    vlerq hashcol V [vlerq getcol $v G]
} {1 0 0 3}
    
test 43 {} {
    vlerq getinfo [vlerq def A {a b c}] [vlerq def A {a b c d e a b c d e}] 2
} {{0 1 2} {2 4 6} {0 5 1 6 2 7}}

test 44 {} {
    vlerq getinfo [vlerq def A {a b c}] [vlerq def A {a c a c}] 2
} {{0 1 2} {2 2 4} {0 2 1 3}}

test 45 {} {
    vlerq getinfo [vlerq def A {a b c d}] [vlerq def A {a b c e a b c e}] 2
} {{0 1 2 3} {2 4 6 6} {0 4 1 5 2 6}}

test 46 {} {
    vlerq getinfo [vlerq def A {a b c}] [vlerq def A {d e f}] 2
} {{0 1 2} {0 0 0} {}}

test 47 {} {
    vlerq getinfo [vlerq def A a] [vlerq def A {a b a b a b}] 2
} {0 3 {0 2 4}}

test 48 {} {
    vlerq getinfo [vlerq def A {a a a}] [vlerq def A {a b a b a b}] 2
} {{0 0 0} 3 {0 2 4}}

test 49 {} {
    set v [vlerq def {B C} {c d e f c d d e}]
    set w [vlerq def {B C} {c d c d d e}]
    vlerq getinfo $v $w 2
} {{0 1 0 2} {2 2 3} {0 1 2}}

test 50 {} {
    set v [vlerq def {A B} {}]
    set w [vlerq def {B C} {}]
    vlerq isectmap [vlerq namecol $v] [vlerq namecol $w]
} 1

test 51 {} {
    vlerq isectmap [vlerq namecol $w] [vlerq namecol $v]
} 0

test 52 {} {
    vlerq join [vlerq def A {a b c}] [vlerq def A {a b c d e a b c d e}] J
} {data {mdef {A {J {}}}} {a b c} {2 2 2}}

test 53 {} {
    vlerq join [vlerq def A {a b c}] [vlerq def A {a c a c}] J
} {data {mdef {A {J {}}}} {a b c} {2 0 2}}

test 54 {} {
    vlerq join [vlerq def A {a b c d}] [vlerq def A {a b c e a b c e}] J
} {data {mdef {A {J {}}}} {a b c d} {2 2 2 0}}

test 55 {} {
    vlerq join [vlerq def A {a b c}] [vlerq def A {d e f}] J
} {data {mdef {A {J {}}}} {a b c} {0 0 0}}

test 56 {} {
    vlerq join [vlerq def A a] [vlerq def A {a b a b a b}] J
} {data {mdef {A {J {}}}} a 3}

test 57 {} {
    vlerq join [vlerq def A {a a a}] [vlerq def A {a b a b a b}] J
} {data {mdef {A {J {}}}} {a a a} {3 3 3}}

test 58 {} {
    set v [vlerq data [vlerq mdef {A B}] {a b c} {A B C}]
    set w [vlerq data [vlerq mdef {A C}] {a c a c} {1 3 1 3}]
    vlerq join $v $w J
} {data {mdef {A B {J C}}} {a b c} {A B C} {{data {mdef C} {1 1}}\
                                              {data {mdef C} {}}\
                                              {data {mdef C} {3 3}}}}
test 59 {} {
    vlerq ungroup [vlerq join $v $w J] -1
} {data {mdef {A B C}} {a a c c} {A A C C} {1 1 3 3}}
    
test 60 {} {
    vlerq ungroup [vlerq join $v $w J] J
} {data {mdef {A B C}} {a a c c} {A A C C} {1 1 3 3}}
    
test 61 {} {
    vlerq ijoin $v $w
} {data {mdef {A B C}} {a a c c} {A A C C} {1 1 3 3}}
    
test 62 {} {
    set v [vlerq def {A B C} {a c d a e f e c d a d e}]
    set w [vlerq def {B C D} {c d e c d f d e f}]
    vlerq ijoin $v $w
} {data {mdef {A B C D}} {a a e e a} {c c c c d} {d d d d e} {e f e f f}}

test 63 {} {
    vlerq join [vlerq def A {a b c}] [vlerq def B {A B C}] J
} {data {mdef {A {J B}}} {a b c} {{data {mdef B} {A B C}}\
                                    {data {mdef B} {A B C}}\
                                    {data {mdef B} {A B C}}}}
test 64 {} {
    set v [vlerq data [vlerq mdef {A B}] {a b c} {A B C}]
    vlerq join $v $v J
} {data {mdef {A B {J {}}}} {a b c} {A B C} {1 1 1}}

test 65 {} {
    set v [vlerq def {A B C} {a c d a e f e c d a d e}]
    set w [vlerq def {B C D} {c d e c d f d e f}]
    vlerq join $v $w J
} {data {mdef {A B C {J D}}} {a a e a} {c e c d} {d f d e}\
                               {{data {mdef D} {e f}}\
                                {data {mdef D} {}}\
                                {data {mdef D} {e f}}\
                                {data {mdef D} f}}}
test 66 {} {
    set r {}
    foreach x {a b c d e f g} {
      lappend r [vlerq strlookup $x {b c d e f}]
    }
    set r
} {-1 0 1 2 3 4 -1}

test 67 {} {
    # vlerq cvstrac #38
    vlerq except [vlerq def {a b} {1 2 3 4 1 2}] [vlerq def {a b} {3 4}]
} {data {mdef {a b}} {1 1} {2 2}}
    
test 68 {} {
    vlerq except [vlerq def {a b} {1 2 3 4}] [vlerq def {a b} {3 4}]
} {data {mdef {a b}} 1 2}

set v [vlerq group [vlerq def {a b} {1 2 3 4 5 6 7 8}] a g]

test 69 {} {
    vlerq loop $v -collect { [vlerq rowhash $v $(#)] }
} {-1702861950 -1165893242 -1501528190 1853940110}
     
test 70 {} {
    vlerq getinfo $v $v 0
} {{0 1 2 3} {4 0 0 3 0 0 2 1} {-1702861950 -1165893242 -1501528190 1853940110}}

test 71 {} {
    # bt: failed on 2006-12-02
    set v [vlerq group [vlerq def {a b} {1 2 3 4 5 6 7 8}] a g]
    vlerq get [vlerq except $v [vlerq slice $v 2 2 2]]
} {3 {data {mdef b} 4} 7 {data {mdef b} 8}}

test 72 {} {
    set v [vlerq def {a b} {1 {2 3 4} 2 {3 4 5} 3 4}]
    set w [vlerq loop $v -collect { [vlerq def d $(b)] }]
    set w [vlerq def {{c d}} $w]
    set v [vlerq pair $v $w]
} {data {mdef {a b {c d}}} {1 2 3}\
                             {{2 3 4} {3 4 5} 4}\
                             {{data {mdef d} {2 3 4}}\
                              {data {mdef d} {3 4 5}}\
                              {data {mdef d} 4}}}
test 73 {} {
    vlerq ungroup $v c
} {data {mdef {a b d}} {1 1 1 2 2 2 3}\
                         {{2 3 4} {2 3 4} {2 3 4} {3 4 5} {3 4 5} {3 4 5} 4}\
                         {2 3 4 3 4 5 4}}

test 74 {join ok} {
    vlerq join [vlerq def a {1 3}] [vlerq def {a b} {1 2 3 4}] J
} {data {mdef {a {J b}}} {1 3} {{data {mdef b} 2} {data {mdef b} 4}}}
    
test 75 {join bad: F115} {
    vlerq join [vlerq def a:I {1 3}] [vlerq def {a:I b} {1 2 3 4}] J
} {data {mdef {a:I {J b}}} {1 3} {{data {mdef b} 2} {data {mdef b} 4}}}

test 76 {} {
    set v [vlerq def A {1 2 3 4 5}]
    set w [vlerq def A {4 2 2 6 4}]
    vlerq exceptmap $v $w
} {0 2 4}
    
test 77 {} {
    set v [vlerq def A {4 2 2 6 4}]
    set w [vlerq def A {1 2 3 4 5}]
    vlerq unionmap $v $w
} {0 2 4}

test 78 {} {
    set v [vlerq def {a b c} {1 a b 2 c d}]
    vlerq group $v {a c} g
} {data {mdef {a c {g b}}} {1 2} {b d} {{data {mdef b} a} {data {mdef b} c}}}

test 79 {} {
    # bt: failed on 2007-02-05, see fff/138
    vlerq group $v {c a} g
} {data {mdef {c a {g b}}} {b d} {1 2} {{data {mdef b} a} {data {mdef b} c}}}

test 80 {} {
    vlerq getinfo $v $v 1
} {{0 1} {1 2} {0 1}}

test 81 {} {
    vlerq grouped [vlerq colmap $v b] {1 2} {0 1} g
} {data {mdef {{g b}}} {{data {mdef b} a} {data {mdef b} c}}}

test 82 {} {
    set v [vlerq def {A B C} {a c d a e f e c d a d e}]
    set w [vlerq def {B C D} {c d e c d f d e f}]
    vlerq ijoin $v $w
} {data {mdef {A B C D}} {a a e e a} {c c c c d} {d d d d e} {e f e f f}}

test 83 {} {
    vlerq join $v $w J
} {data {mdef {A B C {J D}}} {a a e a} {c e c d} {d f d e}\
                               {{data {mdef D} {e f}}\
                                {data {mdef D} {}}\
                                {data {mdef D} {e f}}\
                                {data {mdef D} f}}}

test 84 {} {
    vlerq isectmap [vlerq meta $v] [vlerq meta $w]
} {1 2}

test 85 {} {
    vlerq isectmap [vlerq meta $w] [vlerq meta $v]
} {0 1}

test 86 {} {
    # bt: failed on 2007-02-10, see fff/140
    set x [vlerq colmap $v {C A B}]
    vlerq ijoin $x $w
} {data {mdef {C A B D}} {d d d d e} {a a e e a} {c c c c d} {e f e f f}}

test 87 {} {
    vlerq join $x $w J
} {data {mdef {C A B {J D}}} {d f d e} {a a e a} {c e c d}\
                               {{data {mdef D} {e f}}\
                                {data {mdef D} {}}\
                                {data {mdef D} {e f}}\
                                {data {mdef D} f}}}

test 88 {} {
    vlerq isectmap [vlerq meta $x] [vlerq meta $w]
} {0 2}

test 89 {} {
    vlerq isectmap [vlerq meta $w] [vlerq meta $x]
} {0 1}

unset -nocomplain r v w x h
    
::tcltest::cleanupTests
